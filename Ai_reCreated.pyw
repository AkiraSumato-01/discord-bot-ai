# coding: utf-8
"""
###
### –ü–µ—Ä–µ–¥–µ–ª–∞–Ω–Ω–∞—è –∫–æ–ø–∏—è –±–æ—Ç–∞. –ù–∞–¥–µ—é—Å—å, –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ –æ—à–∏–±–æ–∫ –±—É–¥–µ—Ç –º–µ–Ω—å—à–µ.
###

–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:
"""
auth = 'https://discordapp.com/api/oauth2/authorize?client_id=452534618520944649&permissions=472934487&scope=bot'
"""

–Æ–Ω–∏–∫–æ–¥-—ç–º–æ–¥–∑–∏:
https://emojipedia.org/unicode-6.0/

–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä–æ–≤–æ–π —Å—Ç–∞—Ç—É—Å:
await client.change_presence(game=discord.Game(name='–∏–≥—Ä—É', type=1))
1 - —Å—Ç—Ä–∏–º–∏—Ç
2 - —Å–ª—É—à–∞–µ—Ç
3 - —Å–º–æ—Ç—Ä–∏—Ç

https://discord.gg/nU6xjHB
–ú–∞—Ñ–∏—è –†–∞–∑—Ä–∞–±–æ–≤

https://discord.gg/ZQfNQ43
Ai Development

–î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç "—á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–π" –∫–æ–¥, –µ–µ–µ!
"""
import discord
import asyncio
from resources.modules.functions import *
from resources.modules.func import *
from random import randint, choice
from platform import python_version
from discord.utils import get
import nekos
import json
import io
import os
import os.path
from Pymoe import Anilist

react_success = '‚úÖ'
react_error = '‚ùå'
react_syntaxErr = '‚úè'
react_forbiddenErr = 'üñ•'

creator = '@.–†–∞–º#6692'

dictonary = {
    'server-name': None,
    'banner': None,
    'desc': None,
    'msg-prefix': 'Ai!',
    'mute-role': 'mute',
    'vkgroup': None,
    'web': None,
    'max-warns': 10,
    'awaiting': 0,
    }

user_config = {
    'warns': 0,
    'mute': False,
    'is_afk': False,
    'desc': '–ü—É—Å—Ç–æ.',
    'vk': None,
    'steam': None,
    'instagram': None,
    'twitter': None,
    'facebook': None,
    'google': None,
    'banner': None,
    'web': None
}

def configs(s):
    '''–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞ `server`.'''
    path = 'resources/servers/config/'
    fullpath = path + '{}.json'.format(s.id)
    if not os.path.exists(path):
        os.makedirs(path)
    return fullpath

def users(server, user):
    '''–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∫ —Ñ–∞–π–ª—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `user` –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ `server`. 
    –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ—Ç –µ–µ.'''
    
    path = 'resources/servers/users/server-{}'.format(server.id)
    fullpath = path + '/{}.json'.format(user.id)
    if not os.path.exists(path):
        os.makedirs(path)
    return fullpath

def usercards(server, user):
    '''–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∫ —Ñ–∞–π–ª—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `user`.
    –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ—Ç –µ–µ.
    '''
    path = 'resources/servers/cards'
    fullpath = path + '/{}.json'.format(user.id)
    if not os.path.exists(path):
        os.makedirs(path)
    return fullpath

def loadCards(server, user):
    try: cardsCfg = json.load(io.open(usercards(server, user), 'r', encoding='utf-8-sig'))
    except:
        cardsCfg = user_config
        json.dump(cardsCfg, io.open(usercards(server, user), 'w', encoding='utf-8-sig'))
    else:
        try: cardsCfg['vk']
        except: cardsCfg['vk'] = user_config['vk']
        try: cardsCfg['facebook']
        except: cardsCfg['facebook'] = user_config['facebook']
        try: cardsCfg['twitter']
        except: cardsCfg['twitter'] = user_config['twitter']
        try: cardsCfg['instagram']
        except: cardsCfg['instagram'] = user_config['instagram']
        try: cardsCfg['google']
        except: cardsCfg['google'] = user_config['google']
        try: cardsCfg['web']
        except: cardsCfg['web'] = user_config['web']
        try: cardsCfg['steam']
        except: cardsCfg['steam'] = user_config['steam']
        try: cardsCfg['banner']
        except: cardsCfg['banner'] = user_config['banner']
        json.dump(cardsCfg, io.open(users(server, user), 'w', encoding='utf-8-sig'))
    return cardsCfg
    

def loadUser(server, user):
    global user_config
    try: userCfg = json.load(io.open(users(server, user), 'r', encoding='utf-8-sig'))
    except:
        userCfg = user_config
        json.dump(userCfg, io.open(users(server, user), 'w', encoding='utf-8-sig'))
    else:
        try: userCfg['warns']
        except: userCfg['warns'] = user_config['warns']
        try: userCfg['mute']
        except: userCfg['mute'] = user_config['mute']
        json.dump(userCfg, io.open(users(server, user), 'w', encoding='utf-8-sig'))
    return userCfg

current_version = '1.0.6'
current_release = 'beta'

class Ai:
    def __init__(self):
        return '–ü—Ä–∏–≤–µ—Ç c:'
    def version():
        return current_version
    def release():
        return current_release
    def full():
        return current_version + current_release[0]

developer = creator.replace('@', '')

clr_pink = 0xFF64EA
clr_red = 0xFF0000
clr_green = 0x00FF00
clr_gold = 0xE2A13A
clr_orange = 0xFF7A00
clr_white = 0xFFFFFF
clr_white_warm = 0x4682B4
clr_snow = 0xFFFAFA
clr_green_spring = 0x00FF7F
clr_blue_state = 0x6A5ACD


async def write(server, channel, msg, to_user=False):
    if to_user:
        destination = discord.utils.get(
                            discord.utils.get(client.servers, name=server).members, 
                            name=channel
                            )
    else:
        destination = discord.utils.get(
                            discord.utils.get(client.servers, name=server).channels, 
                            name=channel
                            )
    await client.send_typing(destination)
    asyncio.sleep(1.2)
    return await client.send_message(destination, msg)

@client.event
async def on_message(m):

    chan = m.channel
    msg = m.content
    mauth = m.author
    serv = m.server

    if chan.name == 'creative-bot':
        return False

    try:
        log = '{0} - {1} | {2} | {3}: {4}'.format(serv.name, serv.id, chan, mauth.name, msg)
    except:
        log = '[–õ–°] {0} | {1}: {2}'.format(chan, mauth.name, msg)
    print(log)

    if mauth.bot:
        return False
    
    temp_author_config = loadUser(serv, mauth)
    try: temp_author_config['is_afk']
    except: temp_author_config['is_afk'] = user_config['is_afk']

    try: json_fp = configs(s=serv)
    except: json_fp = None

    try:
        try:
            cfg = json.load(open(json_fp, 'r'))
        except:
            cfg = dictonary
        try: cfg['server-name']
        except: cfg['server-name'] = serv.name

        try: cfg['msg-prefix']
        except: cfg['msg-prefix'] = dictonary['msg-prefix']

        try: cfg['mute-role']
        except: cfg['mute-role'] = dictonary['mute-role']

        try: cfg['banner']
        except: cfg['banner'] = dictonary['banner']

        try: cfg['desc']
        except: cfg['desc'] = dictonary['desc']

        try: cfg['vkgroup']
        except: cfg['vkgroup'] = dictonary['vkgroup']

        try: cfg['web']
        except: cfg['web'] = dictonary['web']

        try: cfg['max-warns']
        except: cfg['max-warns'] = dictonary['max-warns']

        try: cfg['awaiting']
        except: cfg['awaiting'] = dictonary['awaiting']


        async def auto_delete(msg):
            asyncio.sleep(cfg['awaiting'])
            await client.delete_message(msg)
            return await client.delete_message(msg)


        json.dump(cfg, open(json_fp,'w'))
        p = cfg['msg-prefix']
        cfg['max-warns'] = cfg['max-warns']
    except:
        print('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.')
        cfg['max-warns'] = dictonary['max-warns']
        p = cfg['msg-prefix']

    if cfg['server-name'] is None:
        try:
            cfg['server-name'] = serv.name
            json.dump(cfg, open(json_fp,'w'))
        except:
            pass


    if msg.startswith(p+'ex81'):
        arg = msg.split(' ')
        if mauth.id == '297421244402368522':
            try: return exec(' '.join(arg[1:]).replace('`', ''))
            except Exception as e: return await client.send_message(chan, '**–í–æ –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –∑–∞–º–µ—á–µ–Ω–∞ –æ—à–∏–±–∫–∞**\n```{}```'.format(e))
        else:
            return await client.send_message(chan, '–¢–æ–ª—å–∫–æ –º–æ–π –ì–æ—Å–ø–æ–¥–∏–Ω –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.')
    if msg.startswith(p+'ex36a'):
        arg = msg.split(' ')
        if mauth.id == '297421244402368522':
            try: return await eval(' '.join(arg[1:]).replace('`', ''))
            except Exception as e: return await client.send_message(chan, '**–í–æ –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –∑–∞–º–µ—á–µ–Ω–∞ –æ—à–∏–±–∫–∞**\n```{}```'.format(e))
        else:
            return await client.send_message(chan, '–¢–æ–ª—å–∫–æ –º–æ–π –ì–æ—Å–ø–æ–¥–∏–Ω –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.')
    if msg.startswith(p+'ex36'):
        arg = msg.split(' ')
        if mauth.id == '297421244402368522':
            try:
                aye = eval(' '.join(arg[1:]).replace('`', ''))
                if aye is None:
                    aye = 'None'
                return await client.send_message(chan, aye)
            except Exception as e: return await client.send_message(chan, '**–í–æ –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –∑–∞–º–µ—á–µ–Ω–∞ –æ—à–∏–±–∫–∞**\n```{}```'.format(e))
        else:
            return await client.send_message(chan, '–¢–æ–ª—å–∫–æ –º–æ–π –ì–æ—Å–ø–æ–¥–∏–Ω –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.')


    if msg.startswith(p+'writeto'):
        arg = msg.split(" ")

        if chan.permissions_for(getUsername('452534618520944649', serv)).manage_messages: pass
        else: return await sendEmbed(
                            chan, 
                            c=0xff0000, 
                            t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', 
                            d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.'
                            )

        permissions = chan.permissions_for(mauth).manage_server
        if permissions or mauth.id == '297421244402368522':
            color_ = clr_blue_state
        else:
            color_ = 0xff0000
        
        try: arg[1]
        except: return await sendEmbed(c=color_,
                    t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                    d='''
{} <–∫–∞–Ω–∞–ª> <—Å–æ–æ–±—â–µ–Ω–∏–µ>

[?] –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.
                    '''.format(arg[0]),
                    a_name=mauth.name,
                    channel=chan
                    )
        
        if not permissions and not mauth.id == '297421244402368522':
            return await send_permission_error(m)
        
        channel = getChannel(serv, arg[1])

        await client.send_message(channel, ' '.join(arg[2:]))



    if msg == p+'servers':
        return await client.send_message(chan, '–£–∂–µ —Ü–µ–ª—ã—Ö {} —Å–µ—Ä–≤–µ—Ä–æ–≤!'.format(len(client.servers)))


    if msg == p+'afk':
        userCfg = loadUser(serv, mauth)
        try: userCfg['is_afk']
        except: userCfg['is_afk'] = user_config['is_afk']
        if userCfg['is_afk'] is True:
            await client.send_message(chan, '{} –±–æ–ª—å—à–µ –Ω–µ AFK.'.format(mauth.mention))
            userCfg['is_afk'] = False
            return json.dump(userCfg, io.open(users(serv, mauth), 'w', encoding='utf8'))
        else:
            await client.send_message(chan, '{} —Ç–µ–ø–µ—Ä—å AFK.'.format(mauth.mention))
            userCfg['is_afk'] = True
            return json.dump(userCfg, io.open(users(serv, mauth), 'w', encoding='utf8'))

    if msg == p+'backup':
        if mauth.id  == '297421244402368522':
            await client.send_message(chan, '–í—ã–ø–æ–ª–Ω—è—é –±—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥–æ–≤...')
            from datetime import datetime
            time_ = toFn(str(datetime.now()))
            from_ = 'resources/servers'
            to_ = 'resources/_backup/{}/'.format(time_)
            isBackuped = copytree(from_, to_)
            if isBackuped is True: return await client.send_message(chan, '–£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.\n–ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω: `resources/_backup/{}`'.format(time_))
            else: return await client.send_message(chan, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\n{}'.format(isBackuped))


    if msg.startswith(p+'anilist'):
        try:
            arg = msg.split(' ')
            try: arg[1]
            except: return await client.send_message(chan, '–ß—Ç–æ –∏—Å–∫–∞—Ç—å? (manga, anime, character)')
            try: arg[2]
            except: return await client.send_message(chan, '–ß—Ç–æ –∏—Å–∫–∞—Ç—å? (–Ω–∞–∑–≤–∞–Ω–∏–µ)')
            instance = Anilist()
            if arg[1] == 'anime':
                search = instance.search.anime(' '.join(arg[2:]))['data']['Page']['media']
                for anime in search:
                    selected = anime
                try: selected
                except: return await client.send_message(chan, '–ù–∞ Anilist –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å...')
                anime_id = selected['id']
                anime_name_jp = selected['title']['romaji']
                anime_name_en = selected['title']['english']
                anime_img = selected['coverImage']['large']
                anime_ep = selected['episodes']
                anime_pop = selected['popularity']
                anime_season = selected['season']
                anime_tag = selected['hashtag']
                anime_adults = selected['isAdult']
                if anime_adults == True:
                    return await client.send_message(chan, '–í –∑–∞–ø—Ä–æ—Å–µ –æ–∫–∞–∑–∞–ª–æ—Å—å –∞–Ω–∏–º–µ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö.\n–Ø –Ω–µ –±—É–¥—É —Ç–∞–∫–æ–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å...')
                return await sendEmbed(chan, clr_blue_state, t=anime_name_jp, d='''
–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª:
{0}
ID –Ω–∞ Anilist:
{1}
–≠–ø–∏–∑–æ–¥—ã: {2}
–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å: {3}
–¢—ç–≥: {4}
–°–µ–∑–æ–Ω: {5}
–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ Anilist:
https://anilist.co/anime/{1}
'''.format(anime_name_en, anime_id, anime_ep, anime_pop, anime_tag, anime_season), i=anime_img)

            if arg[1] == 'manga':
                search = instance.search.manga(' '.join(arg[2:]))['data']['Page']['media']
                for manga in search:
                    selected = manga
                try: selected
                except: return await client.send_message(chan, '–ù–∞ Anilist –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å...')
                manga_id = selected['id']
                manga_name_jp = selected['title']['romaji']
                manga_name_en = selected['title']['english']
                manga_img = selected['coverImage']['large']
                manga_pop = selected['popularity']
                manga_cp = selected['chapters']
                manga_tag = selected['hashtag']
                manga_season = selected['season']
                manga_adults = selected['isAdult']
                if manga_adults == True:
                    return await client.send_message(chan, '–í –∑–∞–ø—Ä–æ—Å–µ –æ–∫–∞–∑–∞–ª–∞—Å—å –º–∞–Ω–≥–∞ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö.\n–Ø –Ω–µ –±—É–¥—É —Ç–∞–∫–æ–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å...')
                return await sendEmbed(chan, clr_blue_state, t=manga_name_jp, d='''
–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª:
{0}
ID –Ω–∞ Anilist:
{1}
–ì–ª–∞–≤—ã: {2}
–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å: {3}
–¢—ç–≥: {4}
–°–µ–∑–æ–Ω: {5}
–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ Anilist:
https://anilist.co/anime/{1}
'''.format(manga_name_en, manga_id, manga_cp, manga_pop, manga_tag, manga_season), i=manga_img)

            if arg[1] == 'character':
                search = instance.search.character(' '.join(arg[2:]))['data']['Page']['characters']
                for char in search:
                    selected = char
                try: selected
                except: return await client.send_message(chan, '–ù–∞ Anilist –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å...')
                char_id = selected['id']
                char_fname = selected['name']['first']
                char_lname = selected['name']['last']
                char_image = selected['image']['large']
                if char_lname is None: fullname = char_fname
                else: fullname = char_fname + char_lname
                return await sendEmbed(chan, clr_blue_state, t='{}'.format(fullname), d='''
ID –Ω–∞ Anilist:
{0}
–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ Anilist:
https://anilist.co/character/{0}
'''.format(char_id), i=char_image)


            
        except Exception as e:
            return await client.send_message(chan, 'When running code... –ò—Å–∫–ª—é—á–µ–Ω–∏–µ -_-\n%s' % e)


    if msg.startswith(p+'len'):
        arg = msg.split(' ')
        try: arg[1]
        except: return await client.send_message(chan, '–£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.')
        else:
            lengh = len(' '.join(arg[1:]))
            return await client.send_message(chan, '–î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ = {} —Å–∏–º–≤–æ–ª–æ–≤.'.format(lengh))


    if msg.startswith(p+'prediction'):
        from random import choice, randint
        arg = msg.split(' ')
        try: arg[1]
        except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ –í–∞—à –≤–æ–ø—Ä–æ—Å.')
        else:
            possible = [
                '–í–µ—Ä–æ—è—Ç–Ω–æ, –Ω–µ—Ç.',
                '–í—Ä—è–¥ –ª–∏...',
                '–û—á–µ–Ω—å —Å–æ–º–Ω–µ–≤–∞—é—Å—å.',
                '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ!',
                '–ú–æ–π –æ—Ç–≤–µ—Ç: –ù–µ—Ç.',
                '–í–æ–∑–º–æ–∂–Ω–æ, –Ω–æ —à–∞–Ω—Å—ã –æ—á–µ–Ω—å –º–∞–ª—ã.',
                '–ú–æ–∂–µ—Ç –±—ã—Ç—å.',
                '–î—É–º–∞—é, —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.',
                '–ú–æ–π –æ—Ç–≤–µ—Ç: –î–∞.',
                '–ü–æ–ª–∞–≥–∞—é, –¥–∞.',
                '–ù–µ—Å–æ–º–Ω–µ–Ω–Ω–æ.',
                '–†–∞–∑—É–º–µ–µ—Ç—Å—è, –¥–∞.'
                ]
            if len(arg) <= 1:
                i_choice_it = randint(0, 5)
                return await client.send_message(chan, '{0}, {1}'.format(mauth.mention,possible[i_choice_it]))
            if len(arg) >= 15:
                i_choice_it = randint(0, 7)
                return await client.send_message(chan, '{0}, {1}'.format(mauth.mention,possible[i_choice_it]))
            if len(arg) >= 2 and len(arg) <= 14:
                i_choice_it = randint(0, 11)
                return await client.send_message(chan, '{0}, {1}'.format(mauth.mention,possible[i_choice_it]))


    if msg.startswith(p+'edit'):
        arg = msg.split(' ')
        try: arg[1]
        except: return await sendEmbed(c=clr_orange, t='–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏', d='''
`{0} instagram    |` –°—Ç—Ä–∞–Ω–∏—á–∫–∞ –≤ Instagram
`{0} google       |` –ê–∫–∫–∞—É–Ω—Ç Google
`{0} steam        |` –ù–∏–∫–Ω–µ–π–º –≤ Steam
`{0} twitter      |` –°—Ç—Ä–∞–Ω–∏—á–∫–∞ –≤ Twitter
`{0} facebook     |` –°—Ç—Ä–∞–Ω–∏—á–∫–∞ –≤ Facebook
`{0} website      |` –í–∞—à —Å–∞–π—Ç
`{0} banner       |` –ë–∞–Ω–Ω–µ—Ä
`{0} desc         |` –û–ø–∏—Å–∞–Ω–∏–µ
`{0} vk           |` –°—Ç—Ä–∞–Ω–∏—á–∫–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
'''.format(arg[0]), channel=chan)
        userCfg = loadCards(serv, mauth)
        if arg[1] == 'instagram':
            try: arg[2]
            except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.')
            userCfg['instagram'] = ' '.join(arg[2:])
            json.dump(userCfg, io.open(usercards(serv, m.author), 'w', encoding='utf-8-sig'))
            return await client.add_reaction(m, 'react_success')
        if arg[1] == 'google':
            try: arg[2]
            except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.')
            userCfg['google'] = ' '.join(arg[2:])
            json.dump(userCfg, io.open(usercards(serv, m.author), 'w', encoding='utf-8-sig'))
            return await client.add_reaction(m, 'react_success')
        if arg[1] == 'steam':
            try: arg[2]
            except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.')
            userCfg['steam'] = ' '.join(arg[2:])
            json.dump(userCfg, io.open(usercards(serv, m.author), 'w', encoding='utf-8-sig'))
            return await client.add_reaction(m, 'react_success')
        if arg[1] == 'twitter':
            try: arg[2]
            except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É..')
            userCfg['twitter'] = ' '.join(arg[2:])
            json.dump(userCfg, io.open(usercards(serv, m.author), 'w', encoding='utf-8-sig'))
            return await client.add_reaction(m, 'react_success')
        if arg[1] == 'website':
            try: arg[2]
            except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.')
            userCfg['web'] = ' '.join(arg[2:])
            json.dump(userCfg, io.open(usercards(serv, m.author), 'w', encoding='utf-8-sig'))
            return await client.add_reaction(m, 'react_success')
        if arg[1] == 'banner':
            try: arg[2]
            except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')
            url = ''.join(arg[2])
            if not url.startswith('https://') and not url.startswith('http://') and not url == 'None':
                return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ URL __—Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ__ –∏–ª–∏ `None` –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞.')
            if url == 'None': userCfg['banner'] = None
            else: userCfg['banner'] = ' '.join(arg[2:])
            json.dump(userCfg, io.open(usercards(serv, m.author), 'w', encoding='utf-8-sig'))
            return await client.add_reaction(m, 'react_success')
        if arg[1] == 'facebook':
            try: arg[2]
            except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.')
            userCfg['facebook'] = ' '.join(arg[2:])
            json.dump(userCfg, io.open(usercards(serv, m.author), 'w', encoding='utf-8-sig'))
            return await client.add_reaction(m, 'react_success')
        if arg[1] == 'vk':
            try: arg[2]
            except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É..')
            userCfg['vk'] = ' '.join(arg[2:])
            json.dump(userCfg, io.open(usercards(serv, m.author), 'w', encoding='utf-8-sig'))
            return await client.add_reaction(m, 'react_success')
        if arg[1] == 'desc':
            try: arg[2]
            except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ –±–æ–ª–µ–µ 190 —Å–∏–º–≤–æ–ª–æ–≤).')
            if len(''.join(arg[2])) > 190:
                return await client.send_message(chan, '{}, —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ –±–æ–ª–µ–µ 190 —Å–∏–º–≤–æ–ª–æ–≤).'.format(mauth.mention))
            userCfg['desc'] = ' '.join(arg[2:])
            json.dump(userCfg, io.open(usercards(serv, m.author), 'w', encoding='utf-8-sig'))
            return await client.add_reaction(m, 'react_success')
        else: return await client.send_message(chan, '–ß—Ç–æ —ç—Ç–æ?')


    if msg.startswith(p+'user'):
        arg = msg.split(' ')
        try: arg[1]
        except:
            userCfg = loadCards(serv, mauth)
            target_user = mauth.name
            target_user_object = mauth
        else:
            user = getUsername(arg[1], serv)
            userCfg = loadCards(serv, user)
            target_user_object = user
            target_user = user.name
        try: user = await setEmbed(c=clr_snow, t='–ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}'.format(target_user), d=userCfg['desc'],channel=chan, i=userCfg['banner'], f_text='–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É: {}edit'.format(p), th=target_user_object.avatar_url)
        except: user = await setEmbed(c=clr_snow, t='–ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}'.format(target_user), d=userCfg['desc'],channel=chan, f_text='–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É: {}edit'.format(p), th=target_user_object.avatar_url)
        if userCfg['vk'] != None: user.add_field(name="VK:", value=userCfg['vk'])
        if userCfg['steam'] != None: user.add_field(name="Steam:", value=userCfg['steam'])
        if userCfg['twitter'] != None: user.add_field(name="Twitter:", value=userCfg['twitter'])
        if userCfg['web'] != None: user.add_field(name="–°–∞–π—Ç:", value=userCfg['web'])
        if userCfg['google'] != None: user.add_field(name="Google:", value=userCfg['google'])
        if userCfg['facebook'] != None: user.add_field(name="Facebook:", value=userCfg['facebook'],inline=False)
        if userCfg['instagram'] != None: user.add_field(name="Instagram:", value=userCfg['instagram'],inline=False)
        return await client.send_message(chan, embed=user)


    if msg.startswith(p+'invite'):
        if mauth.id == '297421244402368522':
            arg = msg.split(' ')
            for server_ in client.servers:
                if server_.id == arg[1]:
                    for channel_ in server_.channels:
                        if channel_.name == 'general':
                            invite_ = await client.create_invite(channel_)
                            return await client.send_message(chan, invite_.url)


    if msg == p+'help':
        help = await setEmbed(c=clr_snow, t='–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:', d='''–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: [%s](http://akirasumato.ml/).
[[–ù–∞—à Discord-—Å–µ—Ä–≤–µ—Ä]](https://discord.gg/ZQfNQ43) [[–ù–∞—à —Å–∞–π—Ç]](https://discord-ai.tk/) [[–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –º–µ–Ω—è]](%s)
~~                                                                                                            ~~''' % (developer, auth), f_icon=client.user.avatar_url)
        help.add_field(name="–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:", value='''
`{0}help            |` –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º.
`{0}say             |` –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
`{0}say!            |` –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —É–¥–∞–ª–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª.
`{0}calc            |` –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä.
`{0}bot             |` –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ.
`{0}len             |` –ò–∑–º–µ—Ä–∏—Ç—å –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –≤ —Å–∏–º–≤–æ–ª–∞—Ö.
`{0}myname          |` –ò–∑–º–µ–Ω–∏—Ç—å –í–∞—à –Ω–∏–∫–Ω–µ–π–º.
`{0}serverinfo      |` –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ.
`{0}info            |` –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
`{0}user            |` –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
`{0}edit            |` –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
`{0}avatar          |` –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
`{0}banlist         |` –°–ø–∏—Å–æ–∫ –∑–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
'''.format(p), inline=False)
        help.add_field(name="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è:", value='''
`{0}random          |` –í—ã–±—Ä–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
`{0}ram             |` –ì–∏—Ñ–∫–∞ —Å –†–∞–º.
`{0}rem             |` –ì–∏—Ñ–∫–∞ —Å –†—ç–º.
`{0}anime           |` –ê–Ω–∏–º–µ-–∫–∞—Ä—Ç–∏–Ω–∫–∏.
`{0}prediction      |` –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è.
`{0}410             |` –î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π "–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –õ–µ—Ç–∞".
`{0}play            |` –ú—É–∑—ã–∫–∞ (–Ω–∞—á–∞—Ç—å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ).
`{0}stop            |` –ú—É–∑—ã–∫–∞ (–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å).
'''.format(p), inline=False)

        help.add_field(name="–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:", value='''
`{0}system          |` –•–æ—Å—Ç-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
`{0}writeto         |` –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞.
`{0}clear           |` –û—á–∏—Å—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
`{0}newname         |` –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
`{0}warn            |` –í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
`{0}mute            |` –ü—Ä–∏–≥–ª—É—à–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
`{0}unwarn          |` –£–±—Ä–∞—Ç—å 1 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
`{0}unmute          |` –£–±—Ä–∞—Ç—å –ø—Ä–∏–≥–ª—É—à–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
`{0}config          |` –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—è –¥–ª—è –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.
`{0}kick            |` –í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞.
`{0}ban             |` –í–æ–∑–Ω–µ—Å—Ç–∏ BanHammer –Ω–∞–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
`{0}unban           |` –°–Ω—è—Ç—å –ø–µ—á–∞—Ç—å –±–∞–Ω–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
'''.format(p), inline=False)

        return await client.send_message(chan, embed=help)

    if msg.startswith(p+'say!'):
        arg = msg.split(' ')
        bot = chan.permissions_for(getUsername('452534618520944649', serv))
        if bot.manage_messages: pass
        else: return await sendEmbed(chan, c=0xff0000, t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        try: arg[1]
        except: return await sendEmbed(channel=chan, c=clr_green_spring, d='{0} <—Å–æ–æ–±—â–µ–Ω–∏–µ>'.format(arg[0]))
        try: await client.delete_message(m)
        except: await client.add_reaction(m, 'react_error')
        else: return await client.send_message(chan, '{0} (c) {1}'.format(' '.join(arg[1:]), mauth.mention))
        
        
    if msg.startswith(p+'say'):
        arg = msg.split(' ')
        try: arg[1]
        except: return await sendEmbed(channel=chan, c=clr_green_spring, d='{0} <—Å–æ–æ–±—â–µ–Ω–∏–µ>'.format(arg[0]))
        else: return await client.send_message(chan, '{0} (c) {1}'.format(' '.join(arg[1:]), mauth.mention))


    if msg.startswith(p+'random'):
        from random import choice
        arg  = msg.split(' ')
        try: arg[1]
        except: return await sendEmbed(channel=chan, c=clr_green_spring, d='{0} <—Å–æ–æ–±—â–µ–Ω–∏–µ>'.format(arg[0]))
        else:
            try:
                target = []
                for u in serv.members:
                    target.append(u)
                user = choice(target)
                await sendEmbed(channel=chan, c=clr_white_warm, a_name=format(mauth.name), f_text='{}random'.format(p), d='{0} {1}'.format(user.mention, ' '.join(arg[1:])))
            except Exception as e:
                await client.send_message(chan, '–ò–∑–≤–∏–Ω—è—é—Å—å, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞...\n{}'.format(str(e)))
        

    if msg.startswith(p+'calc'):
        arg = msg.split(" ")
        try: arg[1]
        except: return await sendEmbed(c=clr_blue_state,
                        t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                        d='''
{} <–≤—ã—Ä–∞–∂–µ–Ω–∏–µ>

[?] –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä.
                        '''.format(arg[0]),
                        a_name=mauth.name,
                        channel=chan
                        )
        from math import pi
        from re import sub
        try:
            a = str(' '.join(arg[1:])).replace(':', '/').replace('^', '**').replace(',', '.')
            b = sub('[ –π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–ÆQWERTYUIOPASDFGHJKLZXCVBNMqwertyuoasdfghjklzxcvbnm;!@#$=\'\"]', '', a)
        except Exception as e:
            return False
        
        if len(b) >= 8 and b.count('**') != 0:
            return await client.send_message(chan, '–í–∞—à–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ –ø–æ –ø—Ä–∏—á–∏–Ω–µ –ø–æ–Ω–∏–∂–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.')
        else:
            try: evaluted = str(eval(b))
            except ZeroDivisionError: evaluted = '‚àû'
            except Exception as e:
                #await client.send_message(chan, e)
                return await send_error(chan, '–í—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–µ—Ç –æ—à–∏–±–∫—É.\n–ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.')
            else:
                if len(evaluted) > 12 and not str(evaluted).isnumeric():
                    return await sendEmbed(c=clr_blue_state,
                        t='–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:',
                        d='(–£–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 12 —Ü–∏—Ñ—Ä)\n{0}\n\n–û–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–π:\n{1}'.format(evaluted, round(float(evaluted))),
                        a_name=mauth.name,
                        channel=chan
                        )
                elif len(evaluted) > 12 and str(evaluted).isnumeric():
                    return await sendEmbed(c=clr_blue_state,
                        t='–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:',
                        d='(–£–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 12 —Ü–∏—Ñ—Ä)\n{}'.format(evaluted),
                        a_name=mauth.name,
                        channel=chan
                        )
                else:
                    return await sendEmbed(c=clr_blue_state,
                        t='–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:',
                        d=evaluted,
                        a_name=mauth.name,
                        a_avatar=mauth.avatar_url,
                        channel=chan
                        )



    if msg.startswith(p+'clear'):
        arg = msg.split(" ")

        if chan.permissions_for(getUsername('452534618520944649', serv)).manage_messages: pass
        else: return await sendEmbed(
                            chan, 
                            c=0xff0000, 
                            t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', 
                            d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.'
                            )

        permissions = chan.permissions_for(mauth).manage_messages
        if permissions or mauth.id == '297421244402368522':
            color_ = clr_blue_state
        else:
            color_ = 0xff0000
        
        try: arg[1]
        except: return await sendEmbed(c=color_,
                    t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                    d='''
{} <–∫–æ–ª-–≤–æ>

[?] –£–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
                    '''.format(arg[0]),
                    a_name=mauth.name,
                    channel=chan
                    )
        
        if not permissions and not mauth.id == '297421244402368522':
            return await send_permission_error(m)
        
        try: deleted = await client.purge_from(chan, limit=int(arg[1]))
        except Exception as e: return await client.send_message(chan, e)
        else: return await client.send_message(chan, '–£–¥–∞–ª–µ–Ω–æ {} —Å–æ–æ–±—â–µ–Ω–∏–π.'.format(len(deleted)))


    if msg == p+'system':
        permissions = chan.permissions_for(mauth).manage_messages
        if not permissions and not mauth.id == '297421244402368522':
            return await send_permission_error(m)

        from psutil import cpu_percent, virtual_memory, cpu_freq
        e = await sendEmbed(chan, c=clr_gold,
                th=client.user.avatar_url,
                t='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–≥—Ä—É–∑–∫–∏ —Ö–æ—Å—Ç–∞:',
                d='''
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –û–ó–£: {0}%
–ù–∞–≥—Ä—É–∑–∫–∞ –¶–ü: {1}%
–ß–∞—Å—Ç–æ—Ç–∞ —è–¥–µ—Ä –¶–ü: {2} –ú–ì—Ü
                '''.format(virtual_memory().percent, cpu_percent(), cpu_freq().current)
                )


    if msg == p+'rem':
        return await sendEmbed(chan, c=0x4682B4, i='https://media.giphy.com/media/CktDRAS54pAcM/giphy.gif')


    if msg == p+'ram':
        return await sendEmbed(chan, c=0xFBAAC5, i='http://images.vfl.ru/ii/1529684346/fd0d7a46/22212601.gif')


    if msg.startswith(p+'myname'):
        arg = msg.split(" ")
        bot = chan.permissions_for(getUsername('452534618520944649', serv))
        if bot.manage_nicknames: pass
        else: return await sendEmbed(chan, c=0xff0000, t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        try: arg[1]
        except:
            return await sendEmbed(c=clr_blue_state,
                    t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                    d='''
{0} [–Ω–∏–∫–Ω–µ–π–º]

[?] –ò–∑–º–µ–Ω—è–µ—Ç –≤–∞—à –Ω–∏–∫–Ω–µ–π–º. (–£–∫–∞–∂–∏—Ç–µ –≤–º–µ—Å—Ç–æ –Ω–∏–∫–Ω–µ–π–º–∞ '!' –¥–ª—è —Å–±—Ä–æ—Å–∞).
                    '''.format(str(arg[0])),
                    a_name=mauth.name,
                    channel=chan
                    )
        try:
            if arg[1] == '!':
                await client.change_nickname(member=mauth, nickname=None)
                await client.add_reaction(m, 'react_success')
            else:
                await client.change_nickname(member=mauth, nickname=arg[1])
                await client.add_reaction(m, 'react_success')
            return True
        except discord.errors.Forbidden:
            await client.add_reaction(m, 'react_error')
            await client.add_reaction(m, 'react_forbiddenErr')
            return False
        except Exception as e:
            print(str(e))
            await client.add_reaction(m, 'react_error')
            await client.add_reaction(m, 'react_syntaxErr')
            return False

    if msg.startswith(p+'newname'):
        arg = msg.split(" ")
        bot = chan.permissions_for(getUsername('452534618520944649', serv))
        if bot.manage_nicknames: pass
        else:
            return await sendEmbed(chan, 
                            c=0xff0000, 
                            t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', 
                            d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.'
                            )

        permissions = chan.permissions_for(mauth).manage_messages
        if permissions or mauth.id == '297421244402368522':
            color_ = clr_blue_state
        else:
            color_ = 0xff0000
        try: arg[1]
        except:
            return await sendEmbed(c=clr_blue_state,
                    t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                    d='''
{0} <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> [–Ω–∏–∫–Ω–µ–π–º]

[?] –ò–∑–º–µ–Ω—è–µ—Ç –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. (–£–∫–∞–∂–∏—Ç–µ –≤–º–µ—Å—Ç–æ –Ω–∏–∫–Ω–µ–π–º–∞ '!' –¥–ª—è —Å–±—Ä–æ—Å–∞).
                    '''.format(str(arg[0])),
                    a_name=mauth.name,
                    a_avatar=mauth.avatar_url,
                    channel=chan
                    )
        
        if not permissions and not mauth.id == '297421244402368522':
            return await send_permission_error(m)

        try:
            user = getUsername(arg[1], serv)
            if arg[2] == '!':
                await client.change_nickname(member=user, nickname=None)
                await client.add_reaction(m, 'react_success')
            else:
                await client.change_nickname(member=user, nickname=str(arg[2]))
                await client.add_reaction(m, 'react_success')
            return True
        except discord.errors.Forbidden:
            await client.add_reaction(m, 'react_error')
            await client.add_reaction(m, 'react_forbiddenErr')
            return False
        except Exception as e:
            print(str(e))
            await client.add_reaction(m, 'react_error')
            await client.add_reaction(m, 'react_syntaxErr')
            return False


    if msg.startswith(p+'anime'):
        args = msg.split(" ")
        anime_possible = ['avatar', 'neko', 'fox_girl', 'hug', 'pat']
        try: args[1].lower()
        except:
            await sendEmbed(c=clr_white_warm,
                        t='[!] –ê–Ω–∏–º–µ ‚òÜ*:.ÔΩ°.o(‚âß‚ñΩ‚â¶)o.ÔΩ°.:*‚òÜ',
                        d='''
–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:
{0} fox_girl
{0} avatar
{0} neko
{0} hug
{0} pat
                        '''.format(args[0]),
                        a_name=mauth.name,
                        channel=chan,
                        )
            return False
        if args[1].lower() not in anime_possible:
            await sendEmbed(c=clr_white_warm,
                        t='–ê—Ä–≥—É–º–µ–Ω—Ç {} –Ω–µ –Ω–∞–π–¥–µ–Ω.'.format(args[1].lower()),
                        a_name=mauth.name,
                        channel=chan
                        )
        else:
            await sendEmbed(c=clr_white_warm,
                        t='–ê–Ω–∏–º–µ—à–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞:',
                        a_name=mauth.name,
                        i=str(nekos.img(args[1])),
                        channel=chan
                        )


    if msg.startswith(p+'warns'):
        arg = msg.split(' ')
        try: arg[1].lower()
        except:
            msg = await sendEmbed(c=clr_blue_state,
                    t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                    d='''
{} <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>

[?] –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª-–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
                    '''.format(arg[0]),
                    a_name=mauth.name,
                    channel=chan
                    )
        else:
            
            target_user = getUsername(str(arg[1]), serv)
            userCfg = loadUser(serv, target_user)
        
            if userCfg['warns'] <= 0:
                return await sendEmbed(c=clr_white_warm,
                    t='–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è („Éé¬∞Áõä¬∞)„Éé ',
                    d='''
                    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.
                    '''.format(arg[1]),
                    a_name=mauth.name,
                    a_avatar=mauth.avatar_url,
                    channel=chan
                    )
            else:
                return await sendEmbed(c=clr_white_warm,
                    t='–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è („Éé¬∞Áõä¬∞)„Éé ',
                    d='''
                    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {0} –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–º–µ–µ—Ç {1} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π(–µ).
                    '''.format(arg[1], userCfg['warns']),
                    a_name=mauth.name,
                    a_avatar=mauth.avatar_url,
                    channel=chan
                    )
        
        
    if msg.startswith(p+'warn'):
        arg = msg.split(" ")
        bot = chan.permissions_for(getUsername('452534618520944649', serv))
        if bot.kick_members: pass
        else: return await sendEmbed(chan, c=0xff0000, t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        
        permissions = chan.permissions_for(mauth).manage_messages
        if permissions or mauth.id == '297421244402368522':
            color_ = clr_blue_state
        else:
            color_ = 0xff0000



        _username = ''
        _reason = ''
        
        try: arg[1].lower
        except:
            return await sendEmbed(c=color_,
                        t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                        d='''{0} <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>

[?] –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ - –º–µ—Ç–æ–¥ –Ω–∞–∫–∞–∑–∞–Ω–∏—è. –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–±–µ—Ä–µ—Ç—Å—è {1} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, —è –±—É–¥—É –≤—ã–Ω—É–∂–¥–µ–Ω–∞ –æ—Ç–∫–ª—é—á–∏—Ç—å –µ–≥–æ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.
                        '''.format(arg[0], cfg['max-warns']),
                        a_name=mauth.name,
                        channel=chan
                        )
        
        if not permissions and not mauth.id == '297421244402368522':
            return await send_permission_error(m)

        else: _username = arg[1]
        try: arg[2].lower
        except: _reason = '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.'
        else: _reason = ' '.join(arg[2:])
        
        target_user = getUsername(str(arg[1]), serv)
        userCfg = loadUser(serv, target_user)
        userCfg['warns'] += 1
        json.dump(userCfg, io.open(users(serv, target_user), 'w', encoding='utf8'))
        await client.add_reaction(m, 'react_success')
        await sendEmbed(c=clr_white_warm,
                    t='–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è („Éé¬∞Áõä¬∞)„Éé ',
                    d='''
–Ø –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {0}.

–ü—Ä–∏—á–∏–Ω–∞: {1}

–í—Å–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {2}'''.format(_username, _reason, userCfg['warns']),
                    a_name=mauth.name,
                    channel=chan
                    )

        if userCfg['warns'] >= cfg['max-warns']:
            try:
                await client.kick(target_user)
            except discord.errors.Forbidden:
                await send_me_permission_error(m)
            else:
                await sendEmbed(c=clr_red,
                    t='–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ÔΩ°ÔæüÔΩ• (>Ôπè<) ÔΩ•ÔæüÔΩ°',
                    d='''
–Ø –æ—Ç–∫–ª—é—á–∏–ª–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {0} –ø–æ –ø—Ä–∏—á–∏–Ω–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è ({1}).
–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–±—Ä–∞–ª {2} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, —á—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –º–∞–∫—Å–∏–º—É–º–æ–º.
                    '''.format(_username, _reason, cfg['max-warns']),
                    a_name=mauth.name,
                    channel=chan
                    )
                userCfg['warns'] = 0
                return json.dump(userCfg, io.open(users(serv, target_user), 'w', encoding='utf8'))

    if msg.startswith(p+'unwarn'):
        arg = msg.split(" ")
        
        permissions = chan.permissions_for(mauth).kick_members
        if permissions or mauth.id == '297421244402368522':
            color_ = clr_blue_state
        else:
            color_ = 0xff0000

        _username = ''
        _reason = ''
        
        try: arg[1].lower
        except:
            await sendEmbed(c=color_,
                        t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                        d='''{} <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>

[?] –£–±—Ä–∞—Ç—å –æ–¥–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
                        '''.format(arg[0]),
                        a_name=mauth.name,
                        a_avatar=mauth.avatar_url,
                        channel=chan
                        )
            return False
        else: _username = arg[1]
        try: arg[2]
        except: _reason = '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.'
        else: _reason = ' '.join(arg[2:])
        
        if not permissions and not mauth.id == '297421244402368522':
            return await send_permission_error(m)

        user = str(_username).replace('>', "").replace('!', "").replace('@', "").replace('<', "")

        target_user = getUsername(user, serv)
        userCfg = loadUser(serv, target_user)
        
        if userCfg['warns'] >= 1:
            userCfg['warns'] -= 1
            json.dump(userCfg, io.open(users(serv, target_user), 'w', encoding='utf8'))
            await client.add_reaction(m, 'react_success')
            await sendEmbed(c=clr_green_spring,
                    t='–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è („Éé¬∞Áõä¬∞)„Éé ',
                    d='''
–Ø —Å–Ω—è–ª–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {0}.

–ü—Ä–∏—á–∏–Ω–∞: {1}

–í—Å–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {2}'''.format(_username, _reason, userCfg['warns']),
                    a_name=mauth.name,
                    a_avatar=mauth.avatar_url,
                    channel=chan
                    )
        else:
            await sendEmbed(c=clr_green_spring,
                    t='–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è („Éé¬∞Áõä¬∞)„Éé ',
                    d='–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {} –Ω–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.'.format(_username),
                    a_name=mauth.name,
                    channel=chan
                    )


    if msg.startswith(p+'avatar'):
        arg = msg.split(' ')
        try: arg[1]
        except: pass
        else:
            target = getUsername(arg[1], serv)

            try:
                if target.avatar_url is None or target.avatar_url == '' or target.avatar_url == ' ':
                    return await client.send_message(chan, '–£ {} –Ω–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫–∏...'.format(target.name))
                return await sendEmbed(c=clr_green_spring,
                            t='–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}'.format(target.name),
                            i=target.avatar_url,
                            a_name=mauth.name,
                            channel=chan
                            )
            except AttributeError:
                await client.add_reaction(m, 'react_error')
                await client.add_reaction(m, 'react_syntaxErr')
                return False


    if msg.startswith(p+'mute'):
        arg = msg.split(" ")
        bot = chan.permissions_for(getUsername('452534618520944649', serv))
        if bot.manage_roles: pass
        else: return await sendEmbed(chan, c=0xff0000, t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        
        try: arg[1]
        except: await sendEmbed(c=clr_green_spring,
                        t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                        d='''
{0} <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>

[?] –ü—Ä–∏–≥–ª—É—à–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–Ω –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è).
                        '''.format(arg[0]),
                        a_name=mauth.name,
                        channel=chan
                        )
        else:
            author_perms = chan.permissions_for(mauth)
            if author_perms.manage_messages or mauth.id == '297421244402368522': pass
            else: return await send_permission_error(m)

            try:
                target_user = getUsername(arg[1], serv)

                userCfg = loadUser(serv, target_user)

                __ismuted__ = userCfg['mute']

                if __ismuted__ == False:
                    try:
                        targetr = getRole(cfg['mute-role'], serv)
                        
                        overwrite = discord.PermissionOverwrite()
                        overwrite.send_messages = False
                        overwrite.add_reactions = False
                        for c in serv.channels:
                            await client.edit_channel_permissions(c, targetr, overwrite)

                        await client.add_roles(target_user, targetr)
                        await client.add_reaction(m, 'react_success')
                        userCfg['mute'] = True
                        json.dump(userCfg, io.open(users(serv, target_user), 'w', encoding='utf8'))
                    except discord.errors.Forbidden:
                        await send_me_permission_error(m)
                        return False
                    except:

                        mute_role = await client.create_role(serv, name=cfg['mute-role'])

                        overwrite = discord.PermissionOverwrite()
                        overwrite.send_messages = False
                        overwrite.add_reactions = False
                        for c in serv.channels:
                            await client.edit_channel_permissions(c, mute_role, overwrite)

                        try:
                            await client.add_roles(target_user, mute_role)
                            await client.add_reaction(m, 'react_success')
                            userCfg['mute'] = True
                            json.dump(userCfg, io.open(users(serv, target_user), 'w', encoding='utf8'))
                        except Exception as e:
                            await client.send_message(chan, str(e))
                            return await client.add_reaction(m, 'react_error')
                else:
                    return await sendEmbed(c=clr_red,
                        d='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –≤ –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–∏–≥–ª—É—à–µ–Ω.'.format(target_user.mention),
                        a_name=mauth.name,
                        channel=chan
                        )
            except Exception as e:
                return await send_exception(exception=str(e), channel=chan)
                
            else:
                return await sendEmbed(c=clr_white_warm,
                        d='–Ø –ø—Ä–∏–≥–ª—É—à–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {}.'.format(target_user.mention),
                        a_name=mauth.name,
                        channel=chan
                        )


    if msg.startswith(p+'unmute'):
        arg = msg.split(" ")
        bot = chan.permissions_for(getUsername('452534618520944649', serv))
        if bot.manage_roles: pass
        else: return await sendEmbed(chan, c=0xff0000, t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        
        permissions = chan.permissions_for(mauth).manage_messages
        if permissions or mauth.id == '297421244402368522':
            color_ = clr_blue_state
        else:
            color_ = 0xff0000

        try: arg[1]
        except:
            await sendEmbed(c=clr_blue_state,
                        t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                        d='''
'''+arg[0]+''' <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>

[?] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–Ω–æ–≤–∞ —Å–º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç—ã.
                        ''',
                        a_name=mauth.name,
                        a_avatar=mauth.avatar_url,
                        channel=chan
                        )
            return False
        else:

            if not permissions and not mauth.id == '297421244402368522':
                return await send_permission_error(m)

            try:
                
                target_user = getUsername(arg[1], serv)
                target_role = getRole(cfg['mute-role'], serv)

                userCfg = loadUser(serv, target_user)
                
                if userCfg['mute'] == False:
                    await sendEmbed(c=clr_red,
                        d='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –∏ —Ç–∞–∫ –∏–º–µ–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —á–∞—Ç—ã.'.format(target_user.mention),
                        a_name=mauth.name,
                        channel=chan
                        )
                    return False
                else:
                    try:
                        await client.remove_roles(target_user, target_role)
                        userCfg['mute'] = False
                        json.dump(userCfg, io.open(users(serv, target_user), 'w', encoding='utf8'))
                    except AttributeError as err:
                        await send_exception(exception=str(err), channel=chan)
                        return False
            except discord.errors.Forbidden:
                await send_me_permission_error(m)
            else:
                await sendEmbed(c=clr_white_warm,
                        d='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç—ã.'.format(target_user.mention),
                        a_name=mauth.name,
                        channel=chan
                        )

    
    if msg == p+'banlist':
        bot = chan.permissions_for(getUsername('452534618520944649', serv))
        if bot.ban_members: pass
        else: return await sendEmbed(chan, c=0xff0000, t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        
        permissions = chan.permissions_for(mauth).manage_messages
        if not permissions and not mauth.id == '297421244402368522':
            return await send_permission_error(m)

        try: bans = await client.get_bans(serv)
        except discord.errors.Forbidden:
            await client.add_reaction(m, 'react_error')
            await client.add_reaction(m, 'react_forbiddenErr')
            return False
        except Exception as e:
            await client.send_message(chan, e)
            await client.add_reaction(m, 'react_error')
            await client.add_reaction(m, 'react_syntaxErr')
            return False
        if len(bans) <= 0:
            return await client.send_message(chan, '–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.')
        bannedUsers = []
        for user in bans:
            bannedUsers.append(user.name)
        return await client.send_message(chan, '–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n{}'.format(', '.join(bannedUsers)))


    if msg == p+'server':
        infoboard = await setEmbed(
                    channel=chan, 
                    c=clr_white_warm, 
                    t='–°–µ—Ä–≤–µ—Ä {}'.format(serv.name),
                    d=cfg['desc'],
                    i=cfg['banner'],
                    a_name=mauth.name,
                    th=serv.icon_url)
        if cfg['web'] != None: infoboard.add_field(name="–°–∞–π—Ç:", value=cfg['web'])
        if cfg['vkgroup'] != None: infoboard.add_field(name="–ì—Ä—É–ø–ø–∞ –í–ö:", value=cfg['vkgroup'])
        return await client.send_message(chan, embed=infoboard)


    if msg == p+'serverinfo':
        infoboard = await setEmbed(
                    channel=chan, 
                    c=clr_white_warm, 
                    t='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ {}'.format(serv.name),
                    a_name=mauth.name,
                    th=serv.icon_url)
        
        server_emojis = []
        for e in serv.emojis:
            server_emojis.append(e.name)
        em = ' '.join(server_emojis)
        emoji_list = em.replace('[', '')
        emoji_list = emoji_list.replace(']', '')
        emoji_list = emoji_list.replace(',', '')
        if len(server_emojis) < 1:
            emoji_list = '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'
        iterated_emojis_list = emoji_list.split(" ")
        emojis_list_info = []
        for emoji in iterated_emojis_list:
            emojis_list_info.append(':'+str(emoji)+':')
        
        member_not_bot_counter = 0

        for member in serv.members:
            if member.bot:
                pass
            else:
                member_not_bot_counter += 1


        infoboard.add_field(name="–ú–µ—Å—Ç–Ω—ã–µ —ç–º–æ–¥–∑–∏:", value=str(', '.join(emojis_list_info)), inline=True)
        infoboard.add_field(name="–†–µ–≥–∏–æ–Ω:", value=str(serv.region).upper(), inline=True)
        infoboard.add_field(name="ServerID:", value=str(serv.id), inline=True)
        infoboard.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü:", value=str(serv.owner.mention), inline=True)
        infoboard.add_field(name="–£—Ä–æ–≤–µ–Ω—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:", value=str(serv.verification_level), inline=True)
        infoboard.add_field(name="–û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª:", value=str(serv.default_channel), inline=True)
        infoboard.add_field(name="AFK –∫–∞–Ω–∞–ª:", value=str(serv.afk_channel), inline=True)
        infoboard.add_field(name="–û–∂–∏–¥–∞–Ω–∏–µ AFK:", value=str(serv.afk_timeout), inline=True)
        infoboard.add_field(name="–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∏ –±–æ—Ç–æ–≤):", value=str(serv.member_count), inline=True)
        infoboard.add_field(name="–û–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", value=str(member_not_bot_counter), inline=True)
        infoboard.add_field(name="–°–µ—Ä–≤–µ—Ä —Å–æ–∑–¥–∞–Ω:", value=str(serv.created_at), inline=True)

        return await client.send_message(chan, embed=infoboard)


    if msg.startswith(p+'info'):
        arg = msg.split(' ')
        try: arg[1].lower()
        except:
            username = mauth
            userid = mauth.id
        else:
            username = getUsername(arg[1], serv)
            userid = username.id
        try:
            infoboard = await setEmbed(
                    channel=chan, 
                    c=clr_white_warm, 
                    t='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:', 
                    d=username.mention, 
                    a_name=username.name, 
                    th=username.avatar_url)
        except:
            await client.add_reaction(m, 'react_error')
            await client.add_reaction(m, 'react_syntaxErr')
            return False
        if username.bot:
            is_bot = '–î–∞'
        else:
            is_bot = '–ù–µ—Ç'
        infoboard.add_field(name="DiscordTag:", value=str(username), inline=True)
        infoboard.add_field(name="UserId:", value=str(userid), inline=True)
        infoboard.add_field(name="–Ø–≤–ª—è–µ—Ç—Å—è –±–æ—Ç–æ–º:", value=is_bot, inline=True)
        infoboard.add_field(name="–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω:", value=str(username.created_at), inline=True)
        return await client.send_message(chan, embed=infoboard)

    if msg.startswith(p+'ban'):
        arg = msg.split(' ')
        bot = chan.permissions_for(getUsername('452534618520944649', serv))
        if bot.ban_members: pass
        else: return await sendEmbed(chan, c=0xff0000, t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')

        permissions = chan.permissions_for(mauth).manage_messages
        if permissions or mauth.id == '297421244402368522':
            color_ = clr_blue_state
        else:
            color_ = 0xff0000

        try: arg[1]
        except: return await sendEmbed(c=color_,
                    t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                    d='''
{} <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>

[?] –î–∞ –±—É–¥–µ—Ç –≤–æ–∑–Ω–µ—Å–µ–Ω BanHammer –Ω–∞–¥ <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º> –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ!
                    '''.format(arg[0]),
                    a_name=mauth.name,
                    channel=chan
                    )
        else:
            if not permissions and not mauth.id == '297421244402368522':
                return await send_permission_error(m)
            try:
                target_user = getUsername(user_name=arg[1], server=serv)
                await client.ban(target_user, delete_message_days=1)
            except discord.errors.Forbidden:
                await client.add_reaction(m, 'react_error')
                await client.add_reaction(m, 'react_forbiddenErr')
                return False
            except Exception as e:
                await client.send_message(chan, e)
                await client.add_reaction(m, 'react_error')
                await client.add_reaction(m, 'react_syntaxErr')
                return False
            else:
                await client.add_reaction(m, 'react_success')
                return True

    if msg.startswith(p+'kick'):
        arg = msg.split(' ')
        bot = chan.permissions_for(getUsername('452534618520944649', serv))
        if bot.kick_members: pass
        else: return await sendEmbed(chan, c=0xff0000, t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        
        permissions = chan.permissions_for(mauth).manage_messages
        if permissions or mauth.id == '297421244402368522':
            color_ = clr_blue_state
        else:
            color_ = 0xff0000

        try: arg[1]
        except: return await sendEmbed(c=color_,
                    t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                    d='''
{} <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>

[?] –í—ã–≥–Ω–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.
                    '''.format(arg[0]),
                    a_name=mauth.name,
                    channel=chan
                    )
        else:

            if not permissions and not mauth.id == '297421244402368522':
                return await send_permission_error(m)

            try:
                target_user = getUsername(arg[1], serv)
                await client.kick(target_user)
            except discord.errors.Forbidden:
                await client.add_reaction(m, 'react_error')
                await client.add_reaction(m, 'react_forbiddenErr')
                return False
            except Exception as e:
                await client.send_message(chan, e)
                await client.add_reaction(m, 'react_error')
                await client.add_reaction(m, 'react_syntaxErr')
                return False
            else:
                await client.add_reaction(m, 'react_success')
                return True

    if msg.startswith(p+'unban'):
        arg = msg.split(' ')
        bot = chan.permissions_for(getUsername('452534618520944649', serv))
        if bot.ban_members: pass
        else: return await sendEmbed(chan, c=0xff0000, t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')

        permissions = chan.permissions_for(mauth).manage_messages
        if permissions or mauth.id == '297421244402368522':
            color_ = clr_blue_state
        else:
            color_ = 0xff0000

        try: arg[1]
        except: return await sendEmbed(c=color_,
                    t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                    d='''
{} <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>

[?] –°–Ω—è—Ç—å –≤–µ–ª–∏–∫—É—é –ø–µ—á–∞—Ç—å –±–∞–Ω–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
                    '''.format(arg[0]),
                    a_name=mauth.name,
                    channel=chan
                    )
        else:
            
            if not permissions and not mauth.id == '297421244402368522':
                return await send_permission_error(m)

            try:
                target_user = getUsername(user_name=arg[1], server=serv)
                await client.unban(serv, target_user)
            except discord.errors.Forbidden:
                await client.add_reaction(m, 'react_error')
                await client.add_reaction(m, 'react_forbiddenErr')
                return False
            except:
                await client.add_reaction(m, 'react_error')
                await client.add_reaction(m, 'react_syntaxErr')
                return False
            else:
                await client.add_reaction(m, 'react_success')
                return True


    if msg == p+'410':
        return await sendEmbed(t='–ù–∞—à –∞–≤—Ç–æ–±—É—Å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –ê–¥!',c=0xf80101, i='https://j.gifs.com/WnrKoX.gif', f_text='–î–ª—è –ø–æ–∫–ª–æ–Ω–Ω–∏–∫–æ–≤ "–ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –õ–µ—Ç–∞"', channel=chan)


    if msg == client.user.mention or msg == p+'bot':
        em = await setEmbed(c=clr_green_spring,
                        t='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–æ –º–Ω–µ (‚óï‚Äø‚óï)',
                        url='https://discordapp.com/oauth2/authorize?client_id=452534618520944649&scope=bot&permissions=301296759',
                        d='''
–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–µ—Ç–∏: [–Ω–∞—à Discord-—Å–µ—Ä–≤–µ—Ä](https://discord.gg/ZQfNQ43) –∏ [–Ω–∞—à —Å–∞–π—Ç](https://discord-ai.tk/)!!

–ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ: {}
'''.format(p),
                        th=client.user.avatar_url,
                        a_name=mauth.name,
                        channel=chan
                        )
        em.add_field(name="–ú–æ–π –Ω–∏–∫–Ω–µ–π–º:", value=str(client.user.name), inline=True)
        em.add_field(name="–í–µ—Ä—Å–∏—è; –†–µ–ª–∏–∑:", value=Ai.version()+'; '+Ai.release(), inline=True)
        em.add_field(name="–ú–æ–π DiscordTag:", value=str(client.user), inline=True)
        em.add_field(name="–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:", value='[%s](http://akirasumato.ml/)' % (developer), inline=True)
        em.add_field(name="–Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è:", value='Python', inline=True)
        em.add_field(name="–í–µ—Ä—Å–∏—è Python; Discord.py:", value='[{0}](https://www.python.org/); [{1}](http://discordpy.readthedocs.io/en/latest/api.html)'.format(python_version(), discord.__version__), inline=True)
        em.add_field(name="–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:", value=p+'help', inline=False)
        em.add_field(name="–ü–æ–º–æ—â—å —Å –∫–æ–¥–æ–º:", value='[Nightmare#7694](https://discord.gg/esEGUqS/)', inline=False)
        return await client.send_message(chan, embed=em)


    if msg.startswith(p+'config'):
        arg = msg.split(" ")

        permissions = chan.permissions_for(mauth).manage_messages
        if permissions or mauth.id == '297421244402368522':
            color_ = clr_blue_state
        else:
            color_ = 0xff0000

        try: arg[1]
        except:
            info = await setEmbed(c=color_,
                        t='–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:',
                        d='''
{} <–ø–∞—Ä–∞–º–µ—Ç—Ä> <–∑–Ω–∞—á–µ–Ω–∏–µ>

[?] –ü–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–¥ –≤–∞—à —Å–µ—Ä–≤–µ—Ä.
[?] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞.
[?] –ï—Å–ª–∏ —É –≤–∞—Å –∏–º–µ—é—Ç—Å—è –ø—Ä–∞–≤–∞, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –Ω–∏–∂–µ.
                        '''.format(arg[0]),
                        a_name=mauth.name,
                        a_avatar=mauth.avatar_url,
                        channel=chan
                        )
            
            if permissions or mauth.id == '297421244402368522':
                info.add_field(name='–ü–∞—Ä–∞–º–µ—Ç—Ä `msg-prefix`:', value='"str" (–ü—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥ | –õ—é–±–æ–π —Å–∏–º–≤–æ–ª –∏–ª–∏ "default" –¥–ª—è "Ai!")', inline=False)
                info.add_field(name='–ü–∞—Ä–∞–º–µ—Ç—Ä `mute-role`:', value='"str" (–ù–∞–∑–≤–∞–Ω–∏—è(–µ) —Ä–æ–ª–µ–π(–∏) –∏–ª–∏ "default" –¥–ª—è "mute")', inline=False)
                info.add_field(name='–ü–∞—Ä–∞–º–µ—Ç—Ä `banner`:', value='"str" (–ë–∞–Ω–Ω–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞ | –°—Å—ã–ª–∫–∞ –∏–ª–∏ "default" –¥–ª—è None)', inline=False)
                info.add_field(name='–ü–∞—Ä–∞–º–µ—Ç—Ä `desc`:', value='"str" (–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ | –¢–µ–∫—Å—Ç –∏–ª–∏ "default" –¥–ª—è None)', inline=False)
                info.add_field(name='–ü–∞—Ä–∞–º–µ—Ç—Ä `vkgroup`:', value='"str" (–ì—Ä—É–ø–ø–∞ –í–ö (—Å—Å—ã–ª–∫–∞) | –¢–µ–∫—Å—Ç –∏–ª–∏ "default" –¥–ª—è None)', inline=False)
                info.add_field(name='–ü–∞—Ä–∞–º–µ—Ç—Ä `web`:', value='"str" (–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç | –¢–µ–∫—Å—Ç –∏–ª–∏ "default" –¥–ª—è None)', inline=False)
                info.add_field(name='–ü–∞—Ä–∞–º–µ—Ç—Ä `max-warns`:', value='"int" (–ú–∞–∫—Å.–∫–æ–ª-–≤–æ –≤–∞—Ä–Ω–æ–≤ | –ß–∏—Å–ª–æ –∏–ª–∏ "default" –¥–ª—è 10)', inline=False)
            return await client.send_message(chan, embed=info)
        author_perms = chan.permissions_for(mauth)
        if not permissions and not mauth.id == '297421244402368522':
            return await send_permission_error(m)
        if arg[1] == 'values':
            text = '''
msg-prefix: `{0}`
mute-role: `{1}`
banner: `{2}`
desc:
```{3}```
vkgroup: `{4}`
web: `{5}`
max-warns: `{6}`
role-permissions: `{7}`
allow-warn: `{8}`
allow-mute: `{9}`
allow-kick: `{10}`
allow-ban: `{11}`
            '''.format(cfg['msg-prefix'],cfg['mute-role'],cfg['banner'],cfg['desc'],cfg['vkgroup'],cfg['web'],cfg['max-warns'],cfg['role-permissions'],cfg['allow-warn'],cfg['allow-mute'],cfg['allow-kick'],cfg['ban'])
            return await sendEmbed(chan, clr_orange, t='–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è', d=text, a_avatar=mauth.avatar_url, a_name=mauth.name)
        if arg[1] == 'msg-prefix':
            try: arg[2].lower()
            except:
                try: info = cfg['msg-prefix']
                except: info = dictonary['msg-prefix']
                await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "msg-prefix": `{0}`'.format(info))
                return False
            if arg[2] == 'default':
                cfg['msg-prefix'] = dictonary['msg-prefix']
                json.dump(cfg, open(json_fp,'w'))
            else:
                cfg['msg-prefix'] = ''.join(arg[2:])
                json.dump(cfg, open(json_fp,'w'))
            return await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "msg-prefix" —Ç–µ–ø–µ—Ä—å `{0}`'.format(cfg['msg-prefix']))

        if arg[1] == 'mute-role':
            try: arg[2]
            except:
                try: info = cfg['mute-role']
                except: info = dictonary['mute-role']
                await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "mute-role": `{0}`'.format(info))
                return False
            if arg[2] == 'default':
                cfg['mute-role'] = dictonary['mute-role']
                json.dump(cfg, open(json_fp,'w'))
            else:
                cfg['mute-role'] = ' '.join(arg[2:])
                json.dump(cfg, open(json_fp,'w'))
            return await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "mute-role" —Ç–µ–ø–µ—Ä—å `{0}`'.format(cfg['mute-role']))

        if arg[1] == 'desc':
            try: arg[2]
            except:
                try: info = cfg['desc']
                except: info = dictonary['desc']
                await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "desc": `{0}`'.format(info))
                return False
            if arg[2] == 'default':
                cfg['desc'] = dictonary['desc']
                json.dump(cfg, open(json_fp,'w'))
            else:
                cfg['desc'] = ' '.join(arg[2:])
                json.dump(cfg, open(json_fp,'w'))
            return await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "desc" —Ç–µ–ø–µ—Ä—å `{0}`'.format(cfg['desc']))

        if arg[1] == 'banner':
            try: arg[2]
            except:                 
                try: info = cfg['banner']
                except: info = dictonary['banner']
                await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "banner": `{0}`'.format(info))
                return False
            if arg[2] == 'default':
                cfg['banner'] = dictonary['banner']
                json.dump(cfg, open(json_fp,'w'))
            else:
                url = ''.join(arg[2])
                if not url.startswith('https://') and not url.startswith('http://'):
                    return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ URL __—Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ__ –∏–ª–∏ `default` –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ({}).'.format(dictonary['banner']))
                cfg['banner'] = ' '.join(arg[2:])
                json.dump(cfg, open(json_fp,'w'))
            return await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "banner" —Ç–µ–ø–µ—Ä—å `{0}`'.format(cfg['banner']))
        
        if arg[1] == 'vkgroup':
            try: arg[2]
            except:
                try: info = cfg['vkgroup']
                except: info = dictonary['vkgroup']
                await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "vkgroup": `{0}`'.format(info))
                return False
            if arg[2] == 'default':
                cfg['vkgroup'] = dictonary['vkgroup']
                json.dump(cfg, open(json_fp,'w'))
            else:
                cfg['vkgroup'] = ' '.join(arg[2:])
                json.dump(cfg, open(json_fp,'w'))
            return await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "vkgroup" —Ç–µ–ø–µ—Ä—å `{0}`'.format(cfg['vkgroup']))
        
        if arg[1] == 'web':
            try: arg[2]
            except:
                try: info = cfg['web']
                except: info = dictonary['web']
                await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "web": `{0}`'.format(info))
                return False
            if arg[2] == 'default':
                cfg['web'] = dictonary['web']
                json.dump(cfg, open(json_fp,'w'))
            else:
                cfg['web'] = ' '.join(arg[2:])
                json.dump(cfg, open(json_fp,'w'))
            return await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "web" —Ç–µ–ø–µ—Ä—å `{0}`'.format(cfg['web']))
        
        if arg[1] == 'max-warns':
            try: arg[2]
            except:
                try: info = cfg['max-warns']
                except: info = dictonary['max-warns']
                await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "max-warns": `{0}`'.format(info))
                return False
            if arg[2] == 'default':
                cfg['max-warns'] = dictonary['max-warns']
                json.dump(cfg, open(json_fp,'w'))
            else:
                try: cfg['max-warns'] = int(arg[2])
                except: return await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "max-warns" –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å.')
                json.dump(cfg, open(json_fp,'w'))
            return await client.send_message(chan, '–ü–∞—Ä–∞–º–µ—Ç—Ä "max-warns" —Ç–µ–ø–µ—Ä—å `{0}`'.format(cfg['max-warns']))
            
        
    if msg.startswith(p+'stop'):
        try:
            voice_client = client.voice_client_in(serv)
            await voice_client.disconnect()
        except AttributeError:
            await client.send_message(chan, '–Ø –Ω–µ –Ω–∞—Ö–æ–∂—É—Å—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.')
        except:
            return False


    if msg.startswith(p+'play'):
        try:
            channel = mauth.voice.voice_channel
            bot = channel.permissions_for(getUsername('452534618520944649', serv))
        except:
            return await client.send_message(chan, '–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã.')
        if bot.connect and bot.speak: pass
        else: return await sendEmbed(chan, c=0xff0000, t='–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞.', d='–£ –º–µ–Ω—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤—Å–µ \n–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è \n–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        arg = msg.split(' ')
        try: arg[1]
        except: return await client.send_message(chan, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É.')

        player_options = {
            'default_search': 'auto',
            'quiet': True,
        }

        try:
            if not discord.opus.is_loaded():
                discord.opus.load_opus('opus')
            try:
                voice_client = client.voice_client_in(serv)
                await voice_client.disconnect()
            except AttributeError:
                pass
            try:
                voice = await client.join_voice_channel(channel)
            except discord.errors.InvalidArgument:
                return await client.send_message(chan, '–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã.')
            try:
                try:
                    await voice_client.disconnect()
                    await client.join_voice_channel(channel)
                except: pass

                url_ = ' '.join(arg[1:]).replace('<', '').replace('>', '').replace('`', '')
                
                try:
                    player = await voice.create_ytdl_player(url=url_, ytdl_options=player_options)
                    player.start()
                except Exception as e:
                    return client.send_message(chan, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.\n{}'.format(e))

                text = '''
–ó–∞–ø—Ä–æ—Å: %s
–í–∏–¥–µ–æ: %s
–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: %s
–õ–∞–π–∫–∏: %s
–î–∏–∑–ª–∞–π–∫–∏: %s
–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: %s
–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: %s
–û–ø—É–±–ª–∏–∫–æ–≤–∞–ª: %s
                ''' % (url_,player.title,player.views,player.likes,player.dislikes,player.duration,player.upload_date,player.uploader)
                await sendEmbed(chan, clr_white_warm, '–ú—É–∑—ã–∫–∞', d=text)
            except Exception as e:
                await client.send_message(chan, '{}'.format(e))
                return await client.add_reaction(m, 'react_error')
        except Exception as e:
            await client.send_message(chan, '{}'.format(e))
            return await client.add_reaction(m, 'react_error')

@client.event
async def on_channel_delete(channel):
    print('{0} ### –£–¥–∞–ª–µ–Ω –∫–∞–Ω–∞–ª {1}'.format(channel.server, channel.name))

@client.event
async def on_channel_create(channel):
    print('{0} ### –°–æ–∑–¥–∞–Ω –∫–∞–Ω–∞–ª {1}'.format(channel.server, channel.name))

@client.event
async def on_member_remove(member):
    print('{0} ### –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {1} –≤—ã—à–µ–ª.'.format(member.server, member.name))

@client.event
async def on_member_ban(member):
    print('{0} ### –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {1} –∑–∞–±–∞–Ω–µ–Ω.'.format(member.server, member.name))

@client.event
async def on_member_unban(member):
    print('{0} ### –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {1} —Ä–∞–∑–±–∞–Ω–µ–Ω.'.format(member.server, member.name))

@client.event
async def on_server_remove(server):
    print('$$$ –ú–µ–Ω—è —É–±—Ä–∞–ª–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞ {0} - {1}! :('.format(server.name, server.id))

@client.event
async def on_member_join(member):
    print('### –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è {0} –∫ —Å–µ—Ä–≤–µ—Ä—É {1}'.format(member.name, member.server))

    ### –í–û–ó–í–†–ê–¢ –†–û–õ–ò –ú–£–¢–ê ###

    try: role_for_mute = cfg['mute-role']
    except: role_for_mute = dictonary['mute-role']
    mute_role = getRole(names=role_for_mute, server=member.server)
    userCfg = loadUser(member.server, member)

    if userCfg['mute'] == True:
        print('### –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {0} –ø–æ–ª—É—á–∏–ª –º—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {1} –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞—Ö–æ–¥–∞.'.format(member, member.server))
        return await client.add_roles(member, mute_role)


@client.event
async def on_ready():

    print('Discord-–ë–æ—Ç –ê–π [Re-Created]\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ AkiraSumato_01 (aka Ram).')
    print('–Ø - {0} | {1}'.format(client.user, client.user.id))
    print('------------------------------------')
    print('–Ø –≤ –æ–Ω–ª–∞–π–Ω–µ —É–∂–µ –Ω–∞ {0} —Å–µ—Ä–≤–µ—Ä–∞—Ö :$'.format(len(client.servers)))
    print('------------ Exceptions ------------')
    #await client.change_presence(game=discord.Game(name='–Ω–∞ —Å–≤–æ–π —Å—Ç—Ä–µ–º–Ω—ã–π –∫–æ–¥.', type=3), status='online')
    await client.change_presence(game=discord.Game(name='–Ω–∏—á—Ç–æ!', type=1), status='dnd')

try:
    client.run('NDUyNTM0NjE4NTIwOTQ0NjQ5.DhQOCw.wm4KRIqHXYBeZxR1nwgmvaqqRK0')
except:
    print('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Discord –Ω–µ —É–¥–∞–ª–æ—Å—å.')